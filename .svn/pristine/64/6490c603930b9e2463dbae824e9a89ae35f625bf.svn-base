<?php
/**
 * 电话号码识别.
 * @author by zsc for 2010.03.24
 */

header('Content-Type:text/html; charset=utf-8');                       

class taochePhone{
  var $imgPath;//图片路径    
  var $imgSize;//图片大小
  var $horData;//横向整理的数据
 
  function __construct($path){
      $this->imgPath = $path;
  }
	/**
	 * 颜色分离转换...
	 *
	 * @param unknown_type $path
	 * @return unknown
	 */
  public function getHec()
    {   
        $size = getimagesize($this->imgPath);
        $res = imagecreatefrompng($this->imgPath);        
        for($i=0; $i < $size[1]; ++$i)
        {   
            for($j=0; $j < $size[0]; ++$j)
            {
                $rgb = imagecolorat($res,$j,$i);
                $rgbarray = imagecolorsforindex($res, $rgb);               
                if($rgbarray['red'] < 125 || $rgbarray['green']<125
                || $rgbarray['blue'] < 125)
                {
                    $data[$i][$j]=1;
                }else{
                    $data[$i][$j]=0;
                }
            }
        }
        $this->imgSize = $size;
        $this->hecData = $data;
    }
	/**
	 * 颜色分离后的数据横向整理...
	 *
	 * @return unknown
	 */
	public function magHorData()
	{   
	    
	    $data = $this->hecData;
	    $size = $this->imgSize;    
	    $z = 0;
	    for($i=0; $i<$size[1]; ++$i)   
	    {
	        if(in_array('1',$data[$i])){
	            $z++;
	            for($j=0; $j<$size[0]; ++$j)
	            {   
	                if($data[$i][$j] == '1'){                    
	                   $newdata[$z][$j] = 1;
	                }else{
	                   $newdata[$z][$j] = 0;
	                }
	            }           
	       }    
	        
	    }
	    return $this->horData = $newdata;
	}

    
 
	function getOneWord($data, $offset_x=70)
	{

		$word_width = 12;
		$word_height = 16;

		$c='';

			$newData='';
			for($i=1;$i<$word_height;++$i)
			{
				for($j=$offset_x;$j<$word_width+$offset_x;++$j)
				{
							
					$v = $data[$i][$j];
			        if($v == 0){
			            $c .= "<font color='#FFFFFF'>".$v."</font>";
			        }else{
			          $c .= $v;
			        }
			        $newData.=$v;
			    }
			    $c .= "<br/>";
			}
		$c .= "<br/>";
		$c .= $newData;
		$c .= "<br/>";
		// echo $c;
		return  $this->getNum($newData);
	}

	function getNum($data)
	{
	    static $lib = array(
	        0=>'000111100000001111110000011111111000111000111000111000011100110000011100110000011100110000011100110000011100110000011100111000011100111000111000011111111000011111110000000111100000',
	        1=>'000111000000011111000000010011000000000011000000000011000000000011000000000011000000000011000000000011000000000011000000000011000000000011000000011111111100011111111100011111111100',
	        2=>'000111100000011111111000011111111000010000111000000000011000000000011000000000111000000000110000000001110000000111100000001110000000011100000000111111111000111111111000111111111000',
	        3=>'001111100000011111110000011111111000000000111000000000111000000000111000001111110000001111100000001111111000000000111000000000011000100000111000111111111000111111110000011111100000',
	        4=>'000001110000000001110000000011110000000111110000001110110000001100110000011000110000110000110000110000110000111111111100111111111100000000110000000000110000000000110000000000110000',
	        5=>'011111111000011111111000011111111000011000000000011000000000011111100000011111110000011111111000000000111000000000011000000000011000000000111000011111111000011111110000011111000000',
	        6=>'000011111000000111111000001111111000011100000000011000000000111001110000111011111000111111111100111000011100111000011100111000011100111000011100011111111000001111111000000111100000',
	        7=>'111111111100111111111100111111111000000000011000000000111000000000110000000001110000000001100000000011100000000011000000000111000000000111000000000110000000001110000000001100000000',
	        8=>'000111100000011111111000111000011000111000011100111000011000011100111000001111110000001111110000011100111000111000011100110000011100110000011100111000011100011111111000001111100000',
	        9=>'000111100000011111110000111111111000111000111000110000011100110000011100111000011100111111111100011111011100001110011000000000011000000000111000011111110000011111100000011111000000',
	    );

		foreach ($lib as $key => $value) {
			similar_text($data,$value,$pre);
			if($pre>95){//相似度95%以上
				return $key;
			}
		}

	}

	function getPhone()
	{
		$this->getHec();
		$data = $this->magHorData();
		$first = $this->getOneWord($data);
		$phone = '';
		if($first==1)
		{
			for($i=0;$i<11;++$i)
			{
				$phone .= $this->getOneWord($data,70+12*$i);
			}
		}
		else
		{
			for($i=0;$i<10;++$i)
			{
				$phone .= $this->getOneWord($data,70+12*$i);
			}
			$phone .= '-';
			for($i=0;$i<5;++$i)
			{
				$phone .= $this->getOneWord($data,198+12*$i);
			}
		}
		return $phone;
	}
}

// $imgPath = "gettel.jpg";
// $taochePhone = new gjPhone($imgPath);



// echo $taochePhone->getPhone();



